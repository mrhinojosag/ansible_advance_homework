---
- name: Create new server instances and attaches them a network and passes metadata to the instance
  os_server:
    cloud: ospcloud
    name: "{{ item.0.name }}"
    image: "{{ item.0.image }}"
    meta: "{{ item.0.meta }}"
    flavor: "{{ item.0.flavor }}"
    security_groups: "{{ item.0.security_group }}"
    key_name: "{{ item.0.key_name }}"
    wait: yes
    nics:
      - net-name: int_network
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  with_subelements:
     - "{{ osp_servers }}"
  register: instanceip

- name: Show instanceip results
  debug:
    msg: "{{ item.openstack.interface_ip }}"
  loop: "{{ instanceip.results }}"

- name: Add floating IP to Servers
  os_floating_ip:
      cloud: ospcloud
      state: present
      reuse: yes
      server: "{{ item.key }}"
      network: ext_network
      wait: true
      timeout: 180
  register: instancefloatingip
  with_dict: "{{ osp_servers }}"

- name: Show floating public IP
  debug: 
    msg: "{{ item.floating_ip.floating_ip_address }}"
  with_items: "{{ instancefloatingip.results }}"

- name: Wait for server to be available
  wait_for:
    host: "{{ item.floating_ip.floating_ip_address }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  with_items: "{{ instancefloatingip.results }}"
  delegate_to: "{{ inventory_hostname }}"

